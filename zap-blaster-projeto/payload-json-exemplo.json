{
  "_comentario": "EXEMPLO DE ESTRUTURA PayloadJson - Como mensagens são incrementadas no ChatLog",
  "_estrutura": "ChatPayload contém Contact + array Messages[]",
  "_processo": "Cada nova mensagem é adicionada ao array Messages e depois reordenada por timestamp",
  
  "Contact": {
    "Name": "Cliente 5511988776655",
    "PhoneE164": "5511988776655",
    "ProfilePic": null
  },
  "Messages": [
    {
      "_comentario": "PRIMEIRA MENSAGEM - Texto simples",
      "Id": "primeiro-msg-id-12345",
      "Content": null,
      "body": "Olá, preciso de ajuda!",
      "MediaUrl": null,
      "Direction": "inbound",
      "Ts": "2025-08-31T01:00:00.000Z",
      "timestamp": "2025-08-31T01:00:00.000Z",
      "IsRead": false,
      "Status": "delivered",
      "Type": "text",
      "from": "5511988776655@c.us",
      "ActualContent": "Olá, preciso de ajuda!",
      "ActualTs": "2025-08-30T22:00:00.000-03:00"
    },
    {
      "_comentario": "SEGUNDA MENSAGEM - Imagem com legenda",
      "Id": "segundo-msg-id-67890",
      "Content": null,
      "body": "Aqui está a foto do produto",
      "MediaUrl": "/media/abc123-def456-ghi789.jpg",
      "Direction": "inbound",
      "Ts": "2025-08-31T01:05:30.000Z",
      "timestamp": "2025-08-31T01:05:30.000Z",
      "IsRead": false,
      "Status": "delivered",
      "Type": "image",
      "from": "5511988776655@c.us",
      "ActualContent": "Aqui está a foto do produto",
      "ActualTs": "2025-08-30T22:05:30.000-03:00"
    },
    {
      "_comentario": "TERCEIRA MENSAGEM - Áudio com base64 no body",
      "Id": "terceiro-msg-id-audio",
      "Content": null,
      "body": "data:audio/mpeg;base64,SUQzBAAAAAAASFRMRU4AAAAHAAADMTgyMzMAVElUMgAAAAoAAANUZW1wbGF0ZQBUU1NFAAAADwAAA...[BASE64_COMPLETO]",
      "MediaUrl": "/media/xyz789-audio-file.mp3",
      "Direction": "inbound", 
      "Ts": "2025-08-31T01:10:45.000Z",
      "timestamp": "2025-08-31T01:10:45.000Z",
      "IsRead": false,
      "Status": "delivered",
      "Type": "audio",
      "from": "5511988776655@c.us",
      "ActualContent": "data:audio/mpeg;base64,SUQ...",
      "ActualTs": "2025-08-30T22:10:45.000-03:00"
    },
    {
      "_comentario": "QUARTA MENSAGEM - Resposta do operador",
      "Id": "quarto-msg-id-resposta",
      "Content": null,
      "body": "Obrigado! Recebi seu áudio e vou analisar.",
      "MediaUrl": null,
      "Direction": "outbound",
      "Ts": "2025-08-31T01:12:00.000Z", 
      "timestamp": "2025-08-31T01:12:00.000Z",
      "IsRead": true,
      "Status": "delivered",
      "Type": "text",
      "from": "operador@sistema",
      "ActualContent": "Obrigado! Recebi seu áudio e vou analisar.",
      "ActualTs": "2025-08-30T22:12:00.000-03:00"
    },
    {
      "_comentario": "QUINTA MENSAGEM - Nota de voz (voice)",
      "Id": "quinto-msg-id-voice",
      "Content": null,
      "body": "data:audio/ogg;base64,T2dnUwACAAAAAAAAAABKAAAAAAAAAJYU0AoBHgF2b...[BASE64_VOICE]",
      "MediaUrl": "/media/voice-note-123.ogg",
      "Direction": "inbound",
      "Ts": "2025-08-31T01:15:20.000Z",
      "timestamp": "2025-08-31T01:15:20.000Z", 
      "IsRead": false,
      "Status": "delivered",
      "Type": "voice",
      "from": "5511988776655@c.us",
      "ActualContent": "data:audio/ogg;base64,T2dn...",
      "ActualTs": "2025-08-30T22:15:20.000-03:00"
    }
  ],
  
  "_processo_incremento": {
    "1": "Nova mensagem chega via RabbitMQ",
    "2": "RabbitBackgroundService.ProcessIncomingMessage() é chamado",
    "3": "Busca ChatLog existente por ContactPhoneE164",
    "4": "Se encontra: Deserializa PayloadJson atual",
    "5": "Cria nova MessageInfo com todos os campos",
    "6": "Adiciona ao array Messages (se não for duplicata)",
    "7": "Reordena Messages por timestamp cronológico",
    "8": "Serializa PayloadJson atualizado de volta",
    "9": "Salva no banco e emite evento SignalR"
  },
  
  "_campos_importantes": {
    "Type": "CRÍTICO - Define como frontend renderiza (text/audio/image/voice/etc)",
    "body": "CRÍTICO - Para áudio/voice contém base64 completo com data: prefix",
    "MediaUrl": "URL do arquivo salvo no sistema de storage",
    "Direction": "inbound (recebida) / outbound (enviada)",
    "timestamp": "String ISO para ordenação cronológica",
    "Id": "Identificador único da mensagem (evita duplicatas)"
  },
  
  "_como_frontend_usa": {
    "1": "API REST ChatsController.GetMessages() retorna Messages[]",
    "2": "Frontend mapeia Type para MessageType enum",
    "3": "MediaRenderer usa Type para escolher componente correto",
    "4": "Para audio/voice: usa body como dataUrl se disponível",
    "5": "isMediaOnlyContent() oculta body se for base64"
  }
}
